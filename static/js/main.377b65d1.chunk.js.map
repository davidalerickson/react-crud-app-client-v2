{"version":3,"sources":["apis/streams.js","history.js","actions/index.js","actions/types.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamEdit.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/AuthReducer.js","reducers/index.js","reducers/StreamReducer.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","forceRefresh","fetchStream","id","dispatch","a","streams","get","response","type","payload","data","StreamForm","renderInput","input","label","meta","classNm","error","touched","className","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","console","log","createStream","connect","getState","userId","auth","post","history","push","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","RenderActions","deleteStream","match","params","to","renderContent","stream","state","ownProps","delete","StreamEdit","editStream","initialValues","patch","StreamList","fetchStreams","CurrentUserId","map","key","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","Object","values","StreamShow","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","basename","path","exact","INITIAL_STATE","combineReducers","action","formReducer","_","mapKeys","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.377b65d1.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default axios.create({\n    // baseURL: 'http://localhost:3001'\n    baseURL: 'https://davider-streams-api.herokuapp.com'\n})","//createBrowserHistory comes with react-router-dom\nimport { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory({ forceRefresh: true });","import streams from '../apis/streams'\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    CREATE_STREAM,\n    FETCH_STREAMS,\n    FETCH_STREAM,\n    DELETE_STREAM,\n    EDIT_STREAM\n} from './types'\n//history object imported to allow programatic routing\nimport history from '../history'\n\n\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n}\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n}\n\nexport const createStream = (formValues) => {\n    return async (dispatch, getState) => {\n            // We get the userID and add it to the list record so we can later know who created the record\n        const { userId } = getState().auth\n        const response = await streams.post('/streams', {...formValues, userId})\n        dispatch({\n            type: CREATE_STREAM,\n            payload: response.data\n        })\n        //Do some programmatic navigation to get user back to root route to list of streams\n        history.push('/')\n    }\n}\n\nexport const fetchStreams = () => {\n    return async (dispatch) => {\n        const response = await streams.get('/streams')\n        dispatch({\n            type: FETCH_STREAMS,\n            payload: response.data\n        })\n    }\n}\n\nexport const fetchStream = (id) => {\n    return async (dispatch) => {\n        const response = await streams.get(`/streams/${id}`)\n        dispatch({\n            type: FETCH_STREAM,\n            payload: response.data\n        })\n    }\n}\n\nexport const editStream = (id, formValues) => {\n    return async (dispatch) => {\n        const response = await streams.patch(`/streams/${id}`, formValues)\n        dispatch({\n            type: EDIT_STREAM,\n            payload: response.data\n        })\n        //Do some programmatic navigation to get user back to root route to list of streams\n        history.push('/')\n    }\n}\n\nexport const deleteStream = (id) => {\n    return async (dispatch) => {\n        await streams.delete(`/streams/${id}`)\n        dispatch({\n            type: DELETE_STREAM,\n            payload: id\n        })\n        //Do some programmatic navigation to get user back to root route to list of streams\n        history.push('/')\n    }\n\n}","export const SIGN_IN = 'SIGN_IN'\nexport const SIGN_OUT = 'SIGN_OUT'\nexport const CREATE_STREAM = 'CREATE_STREAM'\nexport const FETCH_STREAMS = 'FETCH_STREAMS'\nexport const FETCH_STREAM = 'FETCH_STREAM'\nexport const DELETE_STREAM = 'DELETE_STREAM'\nexport const EDIT_STREAM = 'EDIT_STREAM'\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nclass StreamForm extends React.Component {\n\n    renderError({ error, touched }){\n        if(touched && error){\n            return(\n                <div className=\"ui error message\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            )\n        }\n    }\n\n    renderInput = ({ input, label, meta  }) => { //destructured formProps\n        //test if touched and error to see if you want to display error class on field\n        const classNm = `field ${meta.error && meta.touched ? \"error\" : \"\"}`\n        return (\n            <div className={classNm}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\"/>\n                {this.renderError(meta)}\n            </div>\n        )\n    }\n\n    //redux-form handleSubmit prevents default action just passes in values\n    onSubmit = (formValues) => {\n        this.props.onSubmit(formValues)\n    }\n\n    render(){\n        return (\n            <div>\n                <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                    <Field name=\"title\" component={this.renderInput} label=\"Enter Title\"/>\n                    <Field name=\"description\" component={this.renderInput} label=\"Enter Description\"/>\n                    <button className=\"ui button primary\">Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst validate= (formValues) => {\n    // console.log(formValues)\n    const errors = {};\n    if(!formValues.title){\n        errors.title = 'You must enter a title'\n    }\n    if(!formValues.description){\n        errors.description = 'You must enter a description'\n    }\n    return errors\n}\n\nexport default reduxForm({\n    form: 'streamForm',\n    validate: validate\n})(StreamForm)\n\n\n","import React from 'react'\nimport  { connect } from 'react-redux'\nimport { createStream } from '../../actions'\nimport StreamForm from './StreamForm'\n\nclass StreamCreate extends React.Component {\n\n    //redux-form handleSubmit prevents default action just passes in values\n    onSubmit = (formValues) => {\n        console.log(formValues)\n        this.props.createStream(formValues)\n    }\n\n    render(){\n        return (\n            <div>\n                <h3>Create a Stream</h3>\n                <StreamForm\n                onSubmit={this.onSubmit}\n                />\n            </div>\n        )\n    }\n}\n\n//reduxForm had already wired to redux, so we created formWrapped to encapusulate everything in to a connect.\nexport default connect(null, { createStream })(StreamCreate)\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Modal = (props) => {\n    return (\n        ReactDOM.createPortal(\n            <div className=\"ui dimmer modals visible active\" onClick={props.onDismiss}>\n                <div className=\"ui standard modal visible active\" onClick={e => e.stopPropagation()}>\n                    <div className=\"header\">{props.title}</div>\n                    <div className=\"content\">{props.content}</div>\n                    <div className=\"actions\">\n                        {props.actions}\n                    </div>\n                </div>\n            </div>,\n            document.querySelector('#modal')\n        )\n    )\n}\n\nexport default Modal\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Modal from '../Modal'\nimport history from '../../history'\nimport  { fetchStream, deleteStream } from '../../actions'\n\n\nclass StreamDelete extends React.Component {\n\n\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id)\n    }\n\n    RenderActions = () => {\n        return (\n            <>\n                <button onClick={() => this.props.deleteStream(this.props.match.params.id)} className=\"ui button negative\">Delete</button>\n                <Link to='/' className=\"ui button\" >Cancel</Link>\n            </>\n        )\n        }\n\n        renderContent = () => {\n            //Provides content even if stream has not yet loaded\n            if(!this.props.stream){\n                return 'Are you sure you want to delete this stream?'\n            }\n            return `Are you sure you want to delete this stream with title: \"${this.props.stream.title}\"`\n        }\n\n\n    render(){\n        return (\n                <Modal\n                title=\"Delete Stream\"\n                content={this.renderContent()}\n                actions={this.RenderActions()}\n                onDismiss={() => history.push('/')}\n                />\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] }\n}\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete)\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchStream, editStream } from '../../actions'\nimport StreamForm from './StreamForm'\n\nclass StreamEdit extends React.Component{\n\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id)\n    }\n\n    onSubmit = (formValues) => {\n        this.props.editStream(this.props.match.params.id, formValues)\n    }\n\n    render(){\n        if(!this.props.stream){\n            return <div>...Loading</div>\n        }\n        return (\n            <div>\n                <h3>Edit a Stream</h3>\n                <StreamForm\n                    onSubmit={this.onSubmit}\n                    initialValues={{\n                        title: this.props.stream.title,\n                        description: this.props.stream.description,\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    //ownProps passed to have access to  props passed in by router as well as any other that we might want to use\n\n    return{\n        stream: state.streams[ownProps.match.params.id]\n    }\n}\n\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit)\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchStreams } from '../../actions'\nimport { Link } from 'react-router-dom'\n\nclass StreamList extends React.Component {\n\n    componentDidMount(){\n        this.props.fetchStreams();\n    }\n\n    renderAdmin(stream){\n        if(stream.userId === this.props.CurrentUserId){\n            return (\n                <div className=\"right floated content\">\n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\n                    <Link to={`/streams/delete/${stream.id}`}className=\"ui button negative\">Delete</Link>\n                </div>\n            )\n        }\n    }\n\n\n    renderList(){\n        return this.props.streams.map(stream => {\n            return (\n                <div className=\"item\" key={stream.id}>\n                    {this.renderAdmin(stream)}\n                    <i className=\"large middle aligned icon camera\"/>\n                    <div className=\"content\">\n                        <Link to={`/streams/${stream.id}`} className=\"header\">\n                            {stream.title}  \n                        </Link>\n                        <div className=\"description\">{stream.description}</div>\n                    </div> \n                </div>\n            )\n        })\n    }\n\n    renderCreate() {\n        if(this.props.isSignedIn){\n            return(\n                <div style={{ textAlign: 'right'}}>\n                    <Link to=\"/streams/new\" className=\"ui button primary\">\n                        Create Stream\n                    </Link>\n                </div>\n            )\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">\n                    {this.renderList()}\n                </div>\n                {this.renderCreate()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    //we convert the object stored in redux state to an array which is easier to manipulate\nreturn { \n    streams: Object.values(state.streams),\n    CurrentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n}\n}\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList)\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchStream } from '../../actions'\n\nclass StreamShow extends React.Component {\n\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id)\n    }\n\n    render(){\n        console.log(this.props.stream)\n        if(!this.props.stream){\n            return <div>...Loading</div>\n        }\n        const { title, description } = this.props.stream\n        return (\n            <div>\n                <h1>{title}</h1>\n                <h5>{description}</h5>\n            </div>\n        )\n    }\n}\n\nconst MapStateToProps = (state, ownProps) => {\n    return{\n        stream: state.streams[ownProps.match.params.id]\n    }}\n\nexport default connect(MapStateToProps, { fetchStream })(StreamShow)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn, signOut } from '../actions'\n\nexport class GoogleAuth extends Component {\n\n    componentDidMount() {\n        //Load the client Google OAuth from loader on the window object that was referenced in the script tag index.html\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({ \n                clientId: '603572671189-vep01tu0k5v0j4qo30dejeimkk8t95kj.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                //after init create and auth2 instance and update state with isSignedIn which will rerender and we can then say if user is signed in \n                this.auth = window.gapi.auth2.getAuthInstance()\n                this.onAuthChange(this.auth.isSignedIn.get())\n                this.auth.isSignedIn.listen(this.onAuthChange) \n                 \n            })\n        })\n    }\n\n    onAuthChange = (isSignedIn) => {\n        //update state when login or logout/login with google userId\n        if(isSignedIn){\n            this.props.signIn(this.auth.currentUser.get().getId())\n        }else{\n            this.props.signOut()\n        }\n    }\n\n    onSignInClick = () => {\n        this.auth.signIn()\n    }\n\n    onSignOutClick = () => {\n        this.auth.signOut()\n    }\n\n    renderAuthButton() {\n        if(this.props.isSignedIn === null){\n            return null\n        }else if(this.props.isSignedIn){\n            return (\n                <button onClick={this.onSignOutClick} className=\"ui red google button\">\n                    <i className=\"google icon\"/>\n                        Sign Out\n                </button>\n            )\n        } else {\n            return (\n                <button onClick={this.onSignInClick} className=\"ui red google button\">\n                    <i className=\"google icon\"/>\n                        Sign in with Google\n                </button>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderAuthButton()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { isSignedIn: state.auth.isSignedIn}\n}\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth)\n\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport GoogleAuth from './GoogleAuth'\n\nconst Header = () => {\n\n    return (\n        <div className=\"ui secondary pointing menu\">\n                <Link to=\"/\" className=\"item\">\n                    Streamer\n                </Link>\n            <div className=\"right menu\">\n                <Link to=\"/\" className=\"item\">\n                        All Streams\n                </Link>\n                <GoogleAuth/>\n            </div> \n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport {HashRouter, Router, Route, Switch } from 'react-router-dom'\nimport StreamCreate from './streams/StreamCreate'\nimport StreamDelete from './streams/StreamDelete'\nimport StreamEdit from './streams/StreamEdit'\nimport StreamList from './streams/StreamList'\nimport StreamShow from './streams/StreamShow'\nimport Header from './Header'\nimport history from '../history'\n\n\nconst App = () => {\n    return (\n        <div className=\"ui container\">\n            <HashRouter basename='/' history={history}>\n                <div>\n                    <Header/>\n                    <Switch>\n                        <Route path=\"/\" exact component={StreamList}/>\n                        <Route path=\"/streams/new\" exact component={StreamCreate}/>\n                        <Route path=\"/streams/edit/:id\" exact component={StreamEdit}/>\n                        <Route path=\"/streams/delete/:id\" exact component={StreamDelete}/>\n                        <Route path=\"/streams/:id\" exact component={StreamShow}/>\n                    </Switch>  \n                </div>\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default App\n ","import { SIGN_IN, SIGN_OUT } from '../actions/types'\nconst INITIAL_STATE = {\n    isSignedIn: true,\n    userId: 101010\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type){\n        case SIGN_IN:\n            return { ...state, isSignedIn: true, userId: action.payload}\n\n\n        case SIGN_OUT:\n            return { ...state, isSignedIn: false, userId: null}\n        default:\n            return state\n\n       \n    }\n}","import { combineReducers } from 'redux'\n//hook up redux-form\nimport  { reducer as formReducer} from 'redux-form'\nimport AuthReducer from './AuthReducer'\nimport StreamReducer from './StreamReducer'\n\n\n\nexport default combineReducers({\n    auth: AuthReducer,\n    form: formReducer,\n    streams: StreamReducer\n})","import _ from 'lodash'\n\nimport {\n    CREATE_STREAM,\n    FETCH_STREAMS,\n    FETCH_STREAM,\n    DELETE_STREAM,\n    EDIT_STREAM\n} from '../actions/types'\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_STREAMS:\n            return { ...state, ..._.mapKeys(action.payload, 'id')}\n        case FETCH_STREAM:\n            return {...state, [action.payload.id]: action.payload}\n        case CREATE_STREAM:\n            return {...state, [action.payload.id]: action.payload}\n        case EDIT_STREAM:\n            return {...state, [action.payload.id]: action.payload}\n        case DELETE_STREAM:\n            return _.omit(state, action.payload)\n\n        default:\n            return state;\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk'\n\n\n\nimport App from './components/App'\nimport reducers from './reducers'\n\n//Hook up Redux Devtools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(  reducers, composeEnhancers(applyMiddleware(reduxThunk)))\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}